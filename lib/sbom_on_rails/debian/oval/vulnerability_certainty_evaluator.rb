require "json"

module SbomOnRails
  module Debian
    module Oval
      class VulnerabilityCertaintyEvaluator
        def initialize
        end

        def run(source_sbom)
          source_sbom
          sbom_data = JSON.parse(source_sbom)
          vulns = sbom_data["vulnerabilities"]
          comps = sbom_data["components"]
          if vulns && vulns.any?
            if comps && comps.any?
              comps_hash = build_components_hash(comps)
              vulns.each do |vuln|
                affected = vuln["affects"]
                next unless affected && affected.any?
                tools = vuln["tools"]
                next unless tools && tools.any?
                next unless all_tools_are_oval?(tools)
                next unless all_comps_are_source?(affected, comps_hash)
                properties = vuln["properties"]
                properties ||= []
                kept_props = properties.reject do |prop|
                  name = prop["name"]
                  next false unless name
                  name == "vuln-assign:certainty"
                end
                vuln["properties"] = kept_props + [{
                  "name" => "vuln-assign:certainty",
                  "value" => "possible"
                }]
              end
            end
          end
          JSON.dump(sbom_data)
        end

        protected

        def all_comps_are_source?(affected, comps_hash)
          affected.all? do |affected_component|
            comp_ref = affected_component["ref"]
            next false unless comp_ref
            component = comps_hash[comp_ref]
            next false unless component
            purl = component["purl"]
            next false unless purl
            purl =~ /arch=source/i
          end
        end

        def all_tools_are_oval?(tools)
          tool_comps = tools["components"]
          return false unless tool_comps && tool_comps.any?
          tool_comps.all? do |tool|
            tool_name = tool["name"]
            tool_name && tool_name =~ /\Aoval -/i
          end
        end

        def build_components_hash(comps)
          comp_hash = {}
          comps.each do |comp|
            comp_id = comp["bom-ref"]
            next unless comp_id
            comp_hash[comp_id] = comp
          end
          comp_hash
        end
      end
    end
  end
end